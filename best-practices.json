{
  "dos": [
    {
      "title": "Commit early and often",
      "desc": "Committing is your safety net giving you a place in history to revert to when necessary."
    },
    {
      "title": "Choose a workflow",
      "desc": "Having all team members following the same flow makes for a happy history."
    },
    {
      "title": "Divide work into repos",
      "desc": "Keeping things isolated makes for easier releases. (With the exception of monolith repos.)"
    },
    {
      "title": "Make useful commit messages",
      "desc": "Let the rest of us clearly know what was changed."
    },
    {
      "title": "Keep up to date (pull/rebase)",
      "desc": "Reduces merge conflicts when introducing the work into Master."
    },
    {
      "title": "Periodic maintenance",
      "desc": "Like anything else, be sure to clean things up once in a while."
    },
    {
      "title": "Enforce maintenance",
      "desc": "Yep. Maintenance is that important it needs to be mentioned twice."
    },
    {
      "title": "Enforce standards",
      "desc": "Everyone's happier when we all play by the same rules."
    },
    {
      "title": "Use useful tools",
      "desc": "Find the tool that best works for your workflow."
    },
    {
      "title": "Integrate with external tools (Slack, JIRA, etc)",
      "desc": "Allows teams to be aware of software updates even while not following the commit history."
    },
    {
      "title": "Move/Copy files in separate commits",
      "desc": "Makes code reviews much easier and less confusing."
    },
    {
      "title": "Name your stashes",
      "desc": "Makes retrieving stashed work much easier."
    },
    {
      "title": "Keep branches tidy",
      "desc": "Name branches to describe the work they include to help identify them in the future and delete when not needed."
    }
  ],
  "donts": [
    {
      "title": "Panic",
      "desc": "Most changes can be undone or reverted."
    },
    {
      "title": "Change published (shared) history",
      "desc": "Always assume something has changed while you were away."
    },
    {
      "title": "Commit generated files",
      "desc": "Generated files can be regenerated at any time, and may be different each time based on various configurations."
    },
    {
      "title": "Commit environment config files",
      "desc": "Each developer and environment may have different config files."
    },
    {
      "title": "Use `reset (--hard | --merge)`  without committing/stashing",
      "desc": "Increases the chances of losing work."
    },
    {
      "title": "Use `clean` without a `-n` flag first",
      "desc": "Deletes untracked files without the ability to undo."
    },
    {
      "title": "Use `pull` with a branch argument",
      "desc": "Eliminates the risk of inadvertently merging branches"
    },
    {
      "title": "Change where a tag points",
      "desc": "Will cause a conflict with other developers."
    },
    {
      "title": "Use `git-filter-branch`",
      "desc": "Another way to rewrite public history."
    },
    {
      "title": "Create `--orphan` branches",
      "desc": "Most likely best to create a new repo. (The exception being GitHub pages.)"
    }
  ]
}